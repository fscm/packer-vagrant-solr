{
  "_copyright": "2016-2020, Frederico Martins",
  "_author":    "Frederico Martins <http://github.com/fscm>",
  "_license":   "SPDX-License-Identifier: MIT",
  "variables": {
    "app_name":            "solr",
    "app_name_ext":        "",
    "checksum_type":       "none",
    "checksum_value":      "",
    "headless":            "true",
    "java_build_number":   "12",
    "java_major_version":  "8",
    "java_token":          "e758a0de34e24606bca991d704f6dcbf",
    "java_update_version": "151",
    "os_arch":             "amd64",
    "os_short_arch":       "x64",
    "os_type_virtualbox":  "Debian_64",
    "os_version":          "9.2.1",
    "solr_uid":            "2012",
    "solr_version":        "7.1.0",
    "system_disk_size":    "8192",
    "system_domain":       "marsh",
    "system_hostname":     "solr",
    "system_locale":       "en_US",
    "system_memory":       "512",
    "system_pwd":          "solr",
    "system_timezone":     "Europe/Lisbon",
    "system_user":         "pollywog",
    "zookeeper_uid":       "2006",
    "zookeeper_version":   "3.4.10"
  },
  "builders": [
    {
      "name":                 "virtualbox",
      "type":                 "virtualbox-iso",
      "boot_wait":            "10s",
      "disk_size":            "{{user `system_disk_size`}}",
      "guest_additions_mode": "upload",
      "guest_additions_path": "VBoxGuestAdditions.iso",
      "guest_os_type":        "{{user `os_type_virtualbox`}}",
      "hard_drive_interface": "sata",
      "headless":             "{{user `headless`}}",
      "http_directory":       "http",
      "iso_checksum":         "{{user `checksum_value`}}",
      "iso_checksum_type":    "{{user `checksum_type`}}",
      "iso_target_path":      "builds/cache/debian-{{user `os_version`}}-{{user `os_arch`}}-netinst.iso",
      "output_directory":     "builds/sandbox/{{build_type}}",
      "shutdown_command":     "echo '{{user `system_pwd`}}' | sudo -S /sbin/shutdown -hP now",
      "ssh_password":         "{{user `system_pwd`}}",
      "ssh_port":             22,
      "ssh_username":         "{{user `system_user`}}",
      "ssh_wait_timeout":     "3600s",
      "vm_name":              "{{user `app_name`}}-{{isotime \"20060102150405\"}}",
      "boot_command": [
        "<esc><wait>",
        "auto ",
        "preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg ",
        "netcfg/get_hostname={{user `system_hostname`}} ",
        "netcfg/get_domain={{user `system_domain`}} ",
        "time/zone={{user `system_timezone`}} ",
        "passwd/root-password={{user `system_pwd`}} ",
        "passwd/root-password-again={{user `system_pwd`}} ",
        "passwd/username={{user `system_user`}} ",
        "passwd/user-password={{user `system_pwd`}} ",
        "passwd/user-password-again={{user `system_pwd`}}<enter>"
      ],
      "iso_urls": [
        "builds/isos/debian-{{user `os_version`}}-{{user `os_arch`}}-netinst.iso",
        "http://cdimage.debian.org/debian-cd/{{user `os_version`}}/{{user `os_arch`}}/iso-cd/debian-{{user `os_version`}}-{{user `os_arch`}}-netinst.iso",
        "http://cdimage.debian.org/cdimage/archive/{{user `os_version`}}/{{user `os_arch`}}/iso-cd/debian-{{user `os_version`}}-{{user `os_arch`}}-netinst.iso"
      ],
      "vboxmanage": [
        ["modifyvm", "{{.Name}}", "--memory", "{{user `system_memory`}}"],
        ["modifyvm", "{{.Name}}", "--vram", "12"],
        ["modifyvm", "{{.Name}}", "--pae", "off"],
        ["modifyvm", "{{.Name}}", "--cpus", "1"],
        ["modifyvm", "{{.Name}}", "--hwvirtex", "on"],
        ["modifyvm", "{{.Name}}", "--paravirtprovider", "legacy"],
        ["modifyvm", "{{.Name}}", "--nestedpaging", "on"],
        ["modifyvm", "{{.Name}}", "--accelerate3d", "off"],
        ["modifyvm", "{{.Name}}", "--accelerate2dvideo", "off"],
        ["modifyvm", "{{.Name}}", "--chipset", "piix3"],
        ["modifyvm", "{{.Name}}", "--boot1", "dvd"],
        ["modifyvm", "{{.Name}}", "--boot2", "disk"],
        ["modifyvm", "{{.Name}}", "--boot3", "none"],
        ["modifyvm", "{{.Name}}", "--boot4", "none"],
        ["modifyvm", "{{.Name}}", "--mouse", "ps2"],
        ["modifyvm", "{{.Name}}", "--keyboard", "ps2"],
        ["modifyvm", "{{.Name}}", "--audio", "none"],
        ["modifyvm", "{{.Name}}", "--usb", "off"],
        ["modifyvm", "{{.Name}}", "--vrde", "off"]
      ]
    }
  ],
  "provisioners": [
    {
      "type":        "file",
      "source":      "files/sysctl/",
      "destination": "/tmp"
    },
    {
      "type":        "file",
      "source":      "files/systemd/",
      "destination": "/tmp"
    },
    {
      "only":           ["virtualbox"],
      "type":           "shell",
      "inline_shebang": "/bin/bash -e",
      "environment_vars": [
        "DEBIAN_FRONTEND=noninteractive"
      ],
      "inline": [
        "unset HISTFILE",
        "history -cw",
        "echo === System Packages ===",
        "sudo apt-get -qq update",
        "sudo apt-get -y -qq install --no-install-recommends linux-headers-amd64 dkms make gcc bzip2 vim wget dbus ca-certificates unzip zip libyaml-0-2 curl",
        "sudo mkdir -p /media/guest_additions_cd",
        "sudo mount -r VBoxGuestAdditions.iso /media/guest_additions_cd",
        "sudo /media/guest_additions_cd/VBoxLinuxAdditions.run --nox11",
        "sudo umount /media/guest_additions_cd",
        "sudo rm -rf /media/guest_additions_cd",
        "sudo rm -rf /etc/kernel/prerm.d/*",
        "sudo apt-get -y -qq purge linux-headers* *-dev",
        "sudo apt-get -y -qq purge dictionaries* emacs* iamerican* ibritish* ienglish* ispell nfacct tcpd vim-tiny libx11-data xauth libxmuu1 libxcb1 libx11-6 libxext6",
        "sudo apt-get -y -qq --purge autoremove",
        "sudo apt-get autoclean",
        "sudo apt-get clean"
      ]
    },
    {
      "type":           "shell",
      "inline_shebang": "/bin/bash -e",
      "inline": [
        "unset HISTFILE",
        "history -cw",
        "echo === System Settings ===",
        "sudo sed -i -r -e '/^mesg n/s/^/tty -s \\&\\& /' /root/.profile",
        "echo 'dash dash/sh boolean false' | sudo debconf-set-selections",
        "sudo dpkg-reconfigure -f noninteractive dash",
        "sudo sed -i -e '/^#NAutoVTs/aNAutoVTs=2' /etc/systemd/logind.conf",
        "sudo update-locale LC_CTYPE={{user `system_locale`}}.UTF-8",
        "echo 'export TZ=:/etc/localtime' | sudo tee /etc/profile.d/tz.sh > /dev/null",
        "echo 'export SYSTEMD_PAGER=' | sudo tee /etc/profile.d/systemd.sh > /dev/null",
        "sudo update-alternatives --set editor /usr/bin/vim.basic",
        "echo === Sysctl ===",
        "sudo cp /tmp/50-solr.conf /etc/sysctl.d/",
        "sudo chown root:root /etc/sysctl.d/50-solr.conf",
        "sudo chmod 0644 /etc/sysctl.d/50-solr.conf",
        "sudo sysctl -p /etc/sysctl.d/50-solr.conf",
        "echo === Java ===",
        "sudo mkdir /opt/java",
        "curl -sL --retry 3 --insecure --header 'Cookie: oraclelicense=accept-securebackup-cookie;' 'http://download.oracle.com/otn-pub/java/jdk/{{user `java_major_version`}}u{{user `java_update_version`}}-b{{user `java_build_number`}}/{{user `java_token`}}/jre-{{user `java_major_version`}}u{{user `java_update_version`}}-linux-{{user `os_short_arch`}}.tar.gz' | sudo tar xz --strip-components=1 -C /opt/java/",
        "sudo chown -R root:root /opt/java",
        "echo 'export JAVA_HOME=/opt/java' | sudo tee /etc/profile.d/java.sh > /dev/null",
        "sudo sed -i -r -e 's/#DefaultEnvironment/DefaultEnvironment/;/DefaultEnvironment/s/([^=])$/\\1 /;/DefaultEnvironment/s/$/\"JAVA_HOME=\\/opt\\/java\"/' /etc/systemd/system.conf",
        "sudo gzip -r /opt/java/man/man1",
        "for program in /opt/java/bin/*; do name=${program##*/}; manpage=''; [[ -f /opt/java/man/man1/${name}.1.gz ]] && manpage=\"--slave /usr/share/man/man1/${name}.1.gz ${name}.1.gz /opt/java/man/man1/${name}.1.gz\"; [[ -x ${program} && ! -L ${program} ]] && sudo update-alternatives --install /usr/bin/${name} ${name} /opt/java/bin/${name} 1 ${manpage}; done",
        "echo === Zookeeper ===",
        "sudo groupadd -g {{user `zookeeper_uid`}} zookeeper",
        "sudo useradd -m -u {{user `zookeeper_uid`}} -g {{user `zookeeper_uid`}} -c 'Apache Zookeeper' -s /bin/bash -d /srv/zookeeper zookeeper",
        "curl -sL --retry 3 --insecure 'https://archive.apache.org/dist/zookeeper/zookeeper-{{user `zookeeper_version`}}/zookeeper-{{user `zookeeper_version`}}.tar.gz' | sudo tar xz --strip-components=1 -C /srv/zookeeper/",
        "sudo mkdir -p /data/zookeeper",
        "sudo mkdir -p /var/{log,run}/zookeeper",
        "sudo ln -s /var/log/zookeeper /srv/zookeeper/logs",
        "sudo ln -s /data/zookeeper /srv/zookeeper/data",
        "sudo cp /srv/zookeeper/conf/zoo_sample.cfg /srv/zookeeper/conf/zoo.cfg",
        "sudo sed -i -r -e '/^dataDir/s/=.*/=\\/data\\/zookeeper/' /srv/zookeeper/conf/zoo.cfg",
        "sudo sed -i -r -e '/^clientPort/s/=.*/=2181/' /srv/zookeeper/conf/zoo.cfg",
        "sudo sed -i -r -e 's/# *maxClientCnxns/maxClientCnxns/;/^maxClientCnxns/s/=.*/=100/' /srv/zookeeper/conf/zoo.cfg",
        "sudo sed -i -r -e 's/# *autopurge.snapRetainCount/autopurge.snapRetainCount/;/^autopurge.snapRetainCount/s/=.*/=50/' /srv/zookeeper/conf/zoo.cfg",
        "sudo sed -i -r -e 's/# *autopurge.purgeInterval/autopurge.purgeInterval/;/^autopurge.purgeInterval/s/=.*/=3/' /srv/zookeeper/conf/zoo.cfg",
        "sudo sed -i -r -e 's/# *log4j.appender.ROLLINGFILE.MaxFileSize/log4j.appender.ROLLINGFILE.MaxFileSize/;/^log4j.appender.ROLLINGFILE.MaxFileSize/s/=.*/=10MB/' /srv/zookeeper/conf/log4j.properties",
        "sudo sed -i -r -e 's/# *log4j.appender.ROLLINGFILE.MaxBackupIndex/log4j.appender.ROLLINGFILE.MaxBackupIndex/;/^log4j.appender.ROLLINGFILE.MaxBackupIndex/s/=.*/=10/' /srv/zookeeper/conf/log4j.properties",
        "echo \"JVMFLAGS=\\\"\\$JVMFLAGS -Xmx\\$(/usr/bin/awk '/MemTotal/{m=\\$2*.20;print int(m)\\\"k\\\"}' /proc/meminfo)\\\"\" | sudo tee -a /srv/zookeeper/conf/java.env > /dev/null",
        "echo -e 'ZOO_LOG4J_PROP=\"INFO,ROLLINGFILE\"\\nZOO_LOG_DIR=\"/var/log/zookeeper\"\\nZOOPIDFILE=\"/var/run/zookeeper/zookeeper.pid\"\\nZOOCFGDIR=\"/srv/zookeeper/conf\"' | sudo tee -a /srv/zookeeper/conf/zookeeper-env.sh > /dev/null",
        "echo 1 | sudo tee /data/zookeeper/myid > /dev/null",
        "sudo chown -R zookeeper:zookeeper /srv/zookeeper /data/zookeeper /var/log/zookeeper /var/run/zookeeper",
        "sudo cp /tmp/zookeeper.service /lib/systemd/system/",
        "sudo systemctl daemon-reload",
        "sudo systemctl enable zookeeper.service",
        "echo === Solr ===",
        "sudo groupadd -g {{user `solr_uid`}} solr",
        "sudo useradd -m -u {{user `solr_uid`}} -g {{user `solr_uid`}} -c 'Apache Solr' -s /bin/bash -d /srv/solr solr",
        "curl -sL --retry 3 --insecure 'https://archive.apache.org/dist/lucene/solr/{{user `solr_version`}}/solr-{{user `solr_version`}}.tgz' | sudo tar xz --strip-components=1 -C /srv/solr/",
        "sudo rm -f /srv/solr/server/solr/zoo.cfg",
        "sudo rm -rf /srv/solr/bin/{init.d,install_solr_service.sh}",
        "sudo rm -rf /srv/solr/{docs,example}",
        "sudo mkdir -p /data/solr",
        "sudo mkdir -p /var/{log,run}/solr",
        "sudo ln -s /var/log/solr /srv/solr/logs",
        "sudo ln -s /data/solr /srv/solr/data",
        "sudo cp /srv/solr/server/solr/solr.xml /data/solr/",
        "sudo sed -i -r -e \"s/# *SOLR_HEAP/SOLR_HEAP/;/^SOLR_HEAP/s|=.*|=\\\"\\$(/usr/bin/awk '/MemTotal/{m=\\$2*.65;print int(m)\\\"k\\\"}' /proc/meminfo)\\\"|\" /srv/solr/bin/solr.in.sh",
        "sudo sed -i -r -e '/^GC_LOG_OPTS=/s/^/#/;/^##*GC_LOG_OPTS/i GC_LOG_OPTS=\"\"' /srv/solr/bin/solr.in.sh",
        "sudo sed -i -r -e 's/# *ZK_HOST/ZK_HOST/;/^ZK_HOST/s/=.*/=\"localhost:2181\"/' /srv/solr/bin/solr.in.sh",
        "sudo sed -i -r -e 's/# *SOLR_HOST/SOLR_HOST/;/^SOLR_HOST/s/=.*/=\"localhost\"/' /srv/solr/bin/solr.in.sh",
        "sudo sed -i -r -e 's/# *SOLR_TIMEZONE/SOLR_TIMEZONE/;/^SOLR_TIMEZONE/s/=.*/=\"UTC\"/' /srv/solr/bin/solr.in.sh",
        "sudo sed -i -r -e 's/# *SOLR_PID_DIR/SOLR_PID_DIR/;/^SOLR_PID_DIR/s|=.*|=\"/var/run/solr\"|' /srv/solr/bin/solr.in.sh",
        "sudo sed -i -r -e 's/# *SOLR_HOME/SOLR_HOME/;/^SOLR_HOME/s|=.*|=\"/data/solr\"|' /srv/solr/bin/solr.in.sh",
        "sudo sed -i -r -e 's/# *LOG4J_PROPS/LOG4J_PROPS/;/^LOG4J_PROPS/s|=.*|=\"/srv/solr/server/resources/log4j.properties\"|' /srv/solr/bin/solr.in.sh",
        "sudo sed -i -r -e 's/# *SOLR_LOG_LEVEL/SOLR_LOG_LEVEL/;/^SOLR_LOG_LEVEL/s/=.*/=\"INFO\"/' /srv/solr/bin/solr.in.sh",
        "sudo sed -i -r -e 's/# *SOLR_LOGS_DIR/SOLR_LOGS_DIR/;/^SOLR_LOGS_DIR/s|=.*|=\"/var/log/solr\"|' /srv/solr/bin/solr.in.sh",
        "sudo sed -i -r -e 's/# *SOLR_PORT/SOLR_PORT/;/^SOLR_PORT/s/=.*/=\"8983\"/' /srv/solr/bin/solr.in.sh",
        "sudo chown -R solr:solr /srv/solr /data/solr /var/log/solr",
        "sudo cp /tmp/solr.service /lib/systemd/system/",
        "sudo systemctl daemon-reload",
        "sudo systemctl enable solr.service",
        "for program in solr; do sudo update-alternatives --install /usr/bin/${program} ${program} /srv/solr/bin/${program} 1; done",
        "echo === Extra System Settings ===",
        "sudo swaplabel -L SWAP /dev/sda1",
        "sudo sed -i -e '/cdrom/d' /etc/fstab",
        "sudo sed -r -i -e 's/(UUID=)[^ ]* (.*)/LABEL=SWAP      \\2/' /etc/fstab",
        "sudo sed -r -i -e 's/(GRUB_TIMEOUT)=(.*)/\\1=1/' /etc/default/grub",
        "sudo sed -r -i -e 's/.*(GRUB_CMDLINE_LINUX)=\"(.*)\"/\\1=\"\\2 cgroup_enable=memory\"/' /etc/default/grub",
        "sudo sed -r -i -e 's/.*(GRUB_CMDLINE_LINUX_DEFAULT)=\"(.*)\"/\\1=\"\\2 elevator=deadline\"/' /etc/default/grub",
        "sudo update-grub2",
        "echo 'blacklist intel_rapl' | sudo tee /etc/modprobe.d/rapl-blacklist.conf > /dev/null",
        "echo 'blacklist i2c_piix4' | sudo tee /etc/modprobe.d/piix4-blacklist.conf > /dev/null",
        "sudo update-initramfs -u -k all",
        "sudo sed -i -r -e '/UseDNS /{h;s/#*UseDNS.*/UseDNS no/};${x;/^$/{s//\\nUseDNS no/;H};x}' /etc/ssh/sshd_config",
        "sudo sed -i -r -e '/GSSAPIAuthentication /{h;s/#*GSSAPIAuthentication.*/GSSAPIAuthentication no/};${x;/^$/{s//\\nGSSAPIAuthentication no/;H};x}' /etc/ssh/sshd_config",
        "echo === Shared Folder ===",
        "sudo mkdir /shared",
        "sudo chown {{user `system_user`}}:{{user `system_user`}} /shared",
        "echo === SSH Key ===",
        "sudo mkdir -p /home/{{user `system_user`}}/.ssh",
        "sudo wget -q --no-check-certificate https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub -O /home/{{user `system_user`}}/.ssh/authorized_keys",
        "sudo chmod 0700 /home/{{user `system_user`}}/.ssh",
        "sudo chmod 0600 /home/{{user `system_user`}}/.ssh/authorized_keys",
        "sudo chown -R {{user `system_user`}}:{{user `system_user`}} /home/{{user `system_user`}}/.ssh",
        "echo === System Cleanup ===",
        "sudo rm -f /root/.bash_history",
        "sudo rm -f /home/{{user `system_user`}}/.bash_history",
        "sudo rm -f /home/{{user `system_user`}}/.vbox_version",
        "sudo rm -f /home/{{user `system_user`}}/.prlctl_version",
        "sudo rm -f /home/{{user `system_user`}}/*.iso",
        "sudo rm -f /var/log/wtmp",
        "sudo rm -f /var/log/btmp",
        "sudo rm -rf /var/log/installer",
        "sudo rm -rf /tmp/* /var/tmp/* /tmp/.*-unix",
        "sudo find /usr/share/locale/* -maxdepth 0 -type d -not -name 'pt*' -not -name 'en*' -exec rm -rf {} \\;",
        "sudo find /usr/share/doc/* -maxdepth 0 -not -name 'virtualbox*' -exec rm -rf {} \\;",
        "sudo find /var/cache -type f -delete",
        "sudo find /var/log -type f | while read f; do echo -n '' | sudo tee $f > /dev/null; done;",
        "sudo find /var/lib/apt/lists -not -name lock -type f -delete",
        "sudo swapoff /dev/sda1",
        "sudo dd if=/dev/zero of=/dev/sda1 || echo 'dd exit code suppressed'",
        "sudo mkswap -L SWAP /dev/sda1",
        "sudo swapon /dev/sda1",
        "sudo dd if=/dev/zero of=/EMPTY bs=1M || echo 'dd exit code suppressed'",
        "sudo rm -f /EMPTY",
        "sudo sync",
        "echo === All Done ==="
      ]
    },
    {
      "type":    "shell-local",
      "command": "case \"$OSTYPE\" in *linux*|*hurd*|*msys*|*cygwin*|*sua*|*interix*) sed -i'' -e '/config.ssh.username/s/=.*/= \"{{user `system_user`}}\"/' Vagrantfile.tpl;; *) sed -i '' -e '/config.ssh.username/s/=.*/= \"{{user `system_user`}}\"/' Vagrantfile.tpl;; esac"
    }
  ],
  "post-processors": [
    [
      {
        "type":                 "vagrant",
        "compression_level":    9,
        "keep_input_artifact":  false,
        "vagrantfile_template": "Vagrantfile.tpl",
        "output":               "builds/providers/{{ .Provider }}/{{user `app_name`}}{{user `app_name_ext`}}.box"
      }
    ]
  ]
}
